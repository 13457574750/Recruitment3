<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.soft.recruitment.dao.ApplyMapper" >
  <resultMap id="BaseResultMap" type="org.soft.recruitment.model.Apply" >
    <id column="apply_Id" property="applyId" jdbcType="INTEGER" />
    <result column="apply_Release_Time" property="applyReleaseTime" jdbcType="VARCHAR" />
    <result column="company_Name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_Create_Time" property="companyCreateTime" jdbcType="VARCHAR" />
    <result column="user_Real_Name" property="userRealName" jdbcType="VARCHAR" />
    <result column="job_Id" property="jobId" jdbcType="VARCHAR" />


    <association property="job" resultMap="org.soft.recruitment.dao.JobMapper.BaseResultMap">
      <id column="job_Id" property="jobId"/>
      <result column="job_Name" property="jobName"/>
    </association>


  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    apply_Id, apply_Release_Time, company_Name, company_Create_Time, user_Real_Name, 
    job_Id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.soft.recruitment.model.ApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from apply
    where apply_Id = #{applyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from apply
    where apply_Id = #{applyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.soft.recruitment.model.ApplyExample" >
    delete from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.soft.recruitment.model.Apply" >
    insert into apply (apply_Id, apply_Release_Time, company_Name, 
      company_Create_Time, user_Real_Name, job_Id
      )
    values (#{applyId,jdbcType=INTEGER}, #{applyReleaseTime,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyCreateTime,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.soft.recruitment.model.Apply" >
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        apply_Id,
      </if>
      <if test="applyReleaseTime != null" >
        apply_Release_Time,
      </if>
      <if test="companyName != null" >
        company_Name,
      </if>
      <if test="companyCreateTime != null" >
        company_Create_Time,
      </if>
      <if test="userRealName != null" >
        user_Real_Name,
      </if>
      <if test="jobId != null" >
        job_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        #{applyId,jdbcType=INTEGER},
      </if>
      <if test="applyReleaseTime != null" >
        #{applyReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCreateTime != null" >
        #{companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.soft.recruitment.model.ApplyExample" resultType="java.lang.Integer" >
    select count(*) from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update apply
    <set >
      <if test="record.applyId != null" >
        apply_Id = #{record.applyId,jdbcType=INTEGER},
      </if>
      <if test="record.applyReleaseTime != null" >
        apply_Release_Time = #{record.applyReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_Name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCreateTime != null" >
        company_Create_Time = #{record.companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealName != null" >
        user_Real_Name = #{record.userRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null" >
        job_Id = #{record.jobId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update apply
    set apply_Id = #{record.applyId,jdbcType=INTEGER},
      apply_Release_Time = #{record.applyReleaseTime,jdbcType=VARCHAR},
      company_Name = #{record.companyName,jdbcType=VARCHAR},
      company_Create_Time = #{record.companyCreateTime,jdbcType=VARCHAR},
      user_Real_Name = #{record.userRealName,jdbcType=VARCHAR},
      job_Id = #{record.jobId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.soft.recruitment.model.Apply" >
    update apply
    <set >
      <if test="applyReleaseTime != null" >
        apply_Release_Time = #{applyReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_Name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCreateTime != null" >
        company_Create_Time = #{companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        user_Real_Name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        job_Id = #{jobId,jdbcType=VARCHAR},
      </if>
    </set>
    where apply_Id = #{applyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.soft.recruitment.model.Apply" >
    update apply
    set apply_Release_Time = #{applyReleaseTime,jdbcType=VARCHAR},
      company_Name = #{companyName,jdbcType=VARCHAR},
      company_Create_Time = #{companyCreateTime,jdbcType=VARCHAR},
      user_Real_Name = #{userRealName,jdbcType=VARCHAR},
      job_Id = #{jobId,jdbcType=VARCHAR}
    where apply_Id = #{applyId,jdbcType=INTEGER}
  </update>

  <select id="findAllApply" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    app.apply_Id,
    app.apply_Release_Time,
    app.company_Name,
    app.company_Create_Time,
    app.user_Real_Name,
    app.job_Id,
    j.job_Id,

    from apply app
    inner join job j
    on app.job_Id=j.job_Id
  </select>
</mapper>